@startuml
skinparam packageStyle rectangle

package "Skyline" {
    package "Frontend" {
        class "WeatherComponent" {
            +inputCity(): void
            +displayWeather(): void
            +displayForecast(): void
        }
        class "DarkModeToggle" {
            +enableDarkMode(): void
            +disableDarkMode(): void
        }
        class "VisualizationComponent" {
            +renderGraph(data: List<DataPoint>): void
        }
    }

    package "Backend" {
        class "WeatherAPI" {
            +getCurrentWeather(city: String): JSON
            +getForecast(city: String): JSON
        }
        class "ForecastDataProcessor" {
            +processForecastData(rawData: JSON): List<Forecast>
        }
    }

    package "Utilities" {
        class "DataParser" {
            +parseWeatherData(rawData: JSON): WeatherData
            +parseForecastData(rawData: JSON): List<Forecast>
        }
    }
}

' Relationships
WeatherComponent --> WeatherAPI : Fetches Data
WeatherAPI --> DataParser : Passes Raw Data
DataParser --> WeatherComponent : Returns Processed Data
WeatherAPI --> ForecastDataProcessor : Processes Forecast Data
ForecastDataProcessor --> WeatherComponent : Returns Forecast
WeatherComponent --> VisualizationComponent : Sends Data for Visualization
WeatherComponent --> DarkModeToggle : Toggles Theme
@enduml
